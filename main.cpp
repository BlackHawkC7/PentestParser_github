#include <QCoreApplication>
#include <QDebug>
#include <QProcess>
#include <QCommandLineOption>
#include <QCommandLineParser>

#include "pentoolnmap.h"
#include "pentoolconfig.h"

int main(int argc, char *argv[])
{
    QCoreApplication a(argc, argv);
    QCoreApplication::setApplicationName("PentestParses");
    QCoreApplication::setApplicationVersion("0.4");
    qInfo() << "Start of app";

    QCommandLineParser cliParser;
    cliParser.setApplicationDescription("Application for parsing some pentest tools outputs");
    cliParser.addHelpOption();
    cliParser.addVersionOption();

    QCommandLineOption nmap({"nmap","nmap tool"}, "Nmap", "nmapfile");
    QCommandLineOption sqlmap({"sqlmap","sqlmap tool"}, "sqlmap", "sqlmapfile");


    //cliParser.addOption(nmap);
    cliParser.addOptions({nmap, sqlmap});
    cliParser.addPositionalArgument("f", "Path to the file that you want to parse");
    cliParser.process(a);


    if(a.arguments().size() == 0) {
        qInfo() << "No args !!!";
    }

    if(cliParser.isSet(nmap)) {
        //nmap
        qInfo() << "nmap";
    }
    else if(cliParser.isSet(sqlmap)) {
        //sqlmap
        qInfo() << "sqlmap";
    }
    else {
        qInfo() << "default";
        cliParser.showHelp();
    }

    //PenToolNmap nmap("testSCAN.xml");


    //PenToolNmap nmap("result.xml");


    //nmap.parse();

/*
    penToolConfig ptConfig("configTest.ini");

    PenToolNmap nmapTestConfig;
    nmapTestConfig.run(ptConfig.getNmapArguments());
*/
    qInfo() << "App end...";
    //return a.exec();
}
